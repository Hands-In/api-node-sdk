/* tslint:disable */
/* eslint-disable */
/**
 * Merchant API
 * The Hands In API is the first and only service that enables users to transact within a group. Our API is heavily orientated around being a RESTful service  that has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, ant utilizes standard HTTP response codes
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Address } from './address';
import { CustomAllocations } from './custom-allocations';
import { ItemAllocations } from './item-allocations';
import { MemberPayments } from './member-payments';
import { MetaData } from './meta-data';
import { ModelInteger } from './model-integer';
import { Money } from './money';
import { PaymentStatus } from './payment-status';
import { ProcessingFee } from './processing-fee';
import { RiskEvaluation } from './risk-evaluation';
import { SplitType } from './split-type';
/**
 * 
 * @export
 * @interface GroupPaymentRecord
 */
export interface GroupPaymentRecord {
    /**
     * 
     * @type {string}
     * @memberof GroupPaymentRecord
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof GroupPaymentRecord
     */
    ownerId: string;
    /**
     * 
     * @type {PaymentStatus}
     * @memberof GroupPaymentRecord
     */
    status: PaymentStatus;
    /**
     * 
     * @type {Array<string>}
     * @memberof GroupPaymentRecord
     */
    memberIds: Array<string>;
    /**
     * 
     * @type {MemberPayments}
     * @memberof GroupPaymentRecord
     */
    memberPayments: MemberPayments;
    /**
     * 
     * @type {ModelInteger}
     * @memberof GroupPaymentRecord
     */
    splitAllocation?: ModelInteger;
    /**
     * 
     * @type {SplitType}
     * @memberof GroupPaymentRecord
     */
    splitType: SplitType;
    /**
     * 
     * @type {CustomAllocations}
     * @memberof GroupPaymentRecord
     */
    customAllocation?: CustomAllocations;
    /**
     * 
     * @type {ItemAllocations}
     * @memberof GroupPaymentRecord
     */
    itemAllocation?: ItemAllocations;
    /**
     * 
     * @type {string}
     * @memberof GroupPaymentRecord
     */
    groupId?: string;
    /**
     * 
     * @type {string}
     * @memberof GroupPaymentRecord
     */
    orderId?: string;
    /**
     * 
     * @type {Money}
     * @memberof GroupPaymentRecord
     */
    totalMoney: Money;
    /**
     * 
     * @type {Money}
     * @memberof GroupPaymentRecord
     */
    amountMoney: Money;
    /**
     * 
     * @type {Money}
     * @memberof GroupPaymentRecord
     */
    tipMoney?: Money;
    /**
     * 
     * @type {Money}
     * @memberof GroupPaymentRecord
     */
    approvedMoney?: Money;
    /**
     * 
     * @type {Money}
     * @memberof GroupPaymentRecord
     */
    refundedMoney?: Money;
    /**
     * 
     * @type {Money}
     * @memberof GroupPaymentRecord
     */
    groupAppFee?: Money;
    /**
     * 
     * @type {Money}
     * @memberof GroupPaymentRecord
     */
    totalAppFees?: Money;
    /**
     * 
     * @type {Array<ProcessingFee>}
     * @memberof GroupPaymentRecord
     */
    processingFees?: Array<ProcessingFee>;
    /**
     * 
     * @type {Array<string>}
     * @memberof GroupPaymentRecord
     */
    refundIds?: Array<string>;
    /**
     * 
     * @type {Address}
     * @memberof GroupPaymentRecord
     */
    shippingAddress?: Address;
    /**
     * If the total payment is not made up by the group members by this date then the transaction will be cancelled. Default 7 days.
     * @type {Date}
     * @memberof GroupPaymentRecord
     */
    expirationDate?: Date;
    /**
     * 
     * @type {RiskEvaluation}
     * @memberof GroupPaymentRecord
     */
    riskEvaluation?: RiskEvaluation;
    /**
     * 
     * @type {string}
     * @memberof GroupPaymentRecord
     */
    statementDescriptionIdentifier?: string;
    /**
     * 
     * @type {string}
     * @memberof GroupPaymentRecord
     */
    note?: string;
    /**
     * 
     * @type {string}
     * @memberof GroupPaymentRecord
     */
    referenceId?: string;
    /**
     * 
     * @type {MetaData}
     * @memberof GroupPaymentRecord
     */
    metaData?: MetaData;
    /**
     * The inviteUrl is only generated when the group payment is fully hosted by hands in
     * @type {string}
     * @memberof GroupPaymentRecord
     */
    url?: string;
    /**
     * The message is shown to everyone in the group when fully hosted by hands in
     * @type {string}
     * @memberof GroupPaymentRecord
     */
    message?: string;
    /**
     * 
     * @type {Date}
     * @memberof GroupPaymentRecord
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof GroupPaymentRecord
     */
    updatedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof GroupPaymentRecord
     */
    version: number;
}
